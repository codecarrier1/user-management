{"version":3,"sources":["components/TableComponent.js","components/PersonalInfoComponent.js","components/CompanyInfoComponent.js","components/ConfirmFormComponent.js","components/SuccessComponent.js","components/AddFormComponent.js","components/IndexComponent.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","button","margin","SimpleTable","values","classes","useState","users","setUser","useEffect","fetch","then","response","json","data","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","TableBody","length","map","user","key","id","scope","name","username","email","address","city","phone","website","Button","onClick","url","method","res","del","filter","employee","removeData","Icon","body","JSON","stringify","headers","console","log","editData","PersonalInfo","next","e","preventDefault","props","nextStep","this","handleChange","Dialog","open","fullWidth","maxWidth","Container","TextField","label","onChange","defaultValue","variant","style","color","Component","CompanyInfo","back","prevStep","AppBar","title","Confirm","confirm","List","ListItem","ListItemText","primary","secondary","AddFormComponent","state","step","setState","input","target","value","PersonalInfoComponent","CompanyInfoComponent","ConfirmFormComponent","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","theme","root","flexGrow","backgroundColor","SimpleTabs","React","setValue","position","Tabs","event","newValue","centered","Tab","App","Grid","container","spacing","item","xs","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1e0b2768.chunk.js","sourcesContent":["//Component To READ, DELETE & UPDATE\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Button, Icon } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  button: {\r\n    margin: 10,\r\n  },\r\n});\r\n\r\nexport default function SimpleTable(values) {\r\n  const classes = useStyles();\r\n  const [users, setUser] = useState([]);\r\n\r\n  //Fetching The Data - Using useEffect Hooks\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setUser(data);\r\n      });\r\n  }, [setUser]);\r\n\r\n  //Removing Data\r\n  const removeData = (id) => {\r\n    let url = `https://jsonplaceholder.typicode.com/users/${id}`;\r\n    fetch(url, {\r\n      method: \"DELETE\",\r\n    }).then((res) => {\r\n      const del = users.filter((employee) => id !== employee.id);\r\n      setUser(del);\r\n    });\r\n  };\r\n\r\n  //Editing Data\r\n  const editData = (id) => {\r\n    let url = `https://jsonplaceholder.typicode.com/users/${id}`;\r\n    fetch(url, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        id: `${id}`,\r\n        name: \"foo\",\r\n        username: \"bar\",\r\n        phone: \"5045\",\r\n        city: \"Kolkata\",\r\n        email: \"user@gmail.com\",\r\n        website: \"www.website.com\",\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setUser(data);\r\n      });\r\n  };\r\n\r\n  //Rendering Data In Browser\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>User ID</TableCell>\r\n            <TableCell align='right'>Name</TableCell>\r\n            <TableCell align='right'>Username</TableCell>\r\n            <TableCell align='right'>Email</TableCell>\r\n            <TableCell align='right'>City</TableCell>\r\n            <TableCell align='right'>Phone</TableCell>\r\n            <TableCell align='right'>Website</TableCell>\r\n            <TableCell align='right'>Delete</TableCell>\r\n            <TableCell align='right'>Edit</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {users.length > 0 ? (\r\n            users.map((user) => (\r\n              <TableRow key={user.id}>\r\n                <TableCell component='th' scope='row'>\r\n                  {user.id}\r\n                </TableCell>\r\n                <TableCell align='right'>{user.name}</TableCell>\r\n                <TableCell align='right'>{user.username}</TableCell>\r\n                <TableCell align='right'>{user.email}</TableCell>\r\n                <TableCell align='right'>{user.address.city}</TableCell>\r\n                <TableCell align='right'>{user.phone}</TableCell>\r\n                <TableCell align='right'>{user.website}</TableCell>\r\n                <TableCell align='right'>\r\n                  <Button onClick={() => removeData(user.id)}>\r\n                    <Icon>delete</Icon>\r\n                  </Button>\r\n                </TableCell>\r\n                <TableCell align='right'>\r\n                  <Button onClick={() => editData(user.id)}>\r\n                    <Icon>edit</Icon>\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          ) : (\r\n            <TableRow>\r\n              <TableCell component='th' scope='row'>\r\n                Loading...\r\n              </TableCell>\r\n              <TableCell align='right'>Loading...</TableCell>\r\n              <TableCell align='right'>Loading...</TableCell>\r\n              <TableCell align='right'>Loading...</TableCell>\r\n              <TableCell align='right'>Loading...</TableCell>\r\n              <TableCell align='right'>Loading...</TableCell>\r\n              <TableCell align='right'>Loading...</TableCell>\r\n              <TableCell align='right'>Loading...</TableCell>\r\n              <TableCell align='right'>Loading...</TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport class PersonalInfo extends Component {\r\n  next = (e) => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  };\r\n\r\n  render() {\r\n    const { values, handleChange } = this.props;\r\n    return (\r\n      <Dialog open fullWidth maxWidth='sm'>\r\n        <Container>\r\n          <TextField\r\n            label='Name'\r\n            onChange={handleChange(\"name\")}\r\n            defaultValue={values.name}\r\n            margin='normal'\r\n            fullWidth\r\n            variant='outlined'\r\n          />\r\n          <br />\r\n          <TextField\r\n            label='Phone'\r\n            onChange={handleChange(\"phone\")}\r\n            defaultValue={values.phone}\r\n            margin='normal'\r\n            fullWidth\r\n            variant='outlined'\r\n          />\r\n          <br />\r\n          <TextField\r\n            label='City'\r\n            onChange={handleChange(\"city\")}\r\n            defaultValue={values.city}\r\n            margin='normal'\r\n            fullWidth\r\n            variant='outlined'\r\n          />\r\n          <br />\r\n          <Button\r\n            style={{ margin: 10 }}\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={this.next}\r\n          >\r\n            Next\r\n          </Button>\r\n        </Container>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PersonalInfo;\r\n","import React, { Component } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport class CompanyInfo extends Component {\r\n  next = (e) => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  };\r\n\r\n  back = (e) => {\r\n    e.preventDefault();\r\n    this.props.prevStep();\r\n  };\r\n\r\n  render() {\r\n    const { values, handleChange } = this.props;\r\n    return (\r\n      <MuiThemeProvider>\r\n        <Dialog open fullWidth maxWidth='sm'>\r\n          <Container>\r\n            <AppBar title='Enter Personal Details' />\r\n            <TextField\r\n              label='Username'\r\n              onChange={handleChange(\"username\")}\r\n              defaultValue={values.username}\r\n              margin='normal'\r\n              fullWidth\r\n              variant='outlined'\r\n            />\r\n            <br />\r\n            <TextField\r\n              label='email'\r\n              onChange={handleChange(\"email\")}\r\n              defaultValue={values.email}\r\n              margin='normal'\r\n              fullWidth\r\n              variant='outlined'\r\n            />\r\n            <br />\r\n            <TextField\r\n              label='Website'\r\n              onChange={handleChange(\"website\")}\r\n              defaultValue={values.website}\r\n              margin='normal'\r\n              fullWidth\r\n              variant='outlined'\r\n            />\r\n            <br />\r\n\r\n            <Button\r\n              color='secondary'\r\n              style={{ margin: 10 }}\r\n              variant='contained'\r\n              onClick={this.back}\r\n            >\r\n              Back\r\n            </Button>\r\n\r\n            <Button color='primary' variant='contained' onClick={this.next}>\r\n              Continue\r\n            </Button>\r\n          </Container>\r\n        </Dialog>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompanyInfo;\r\n","import React, { Component } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { List, ListItem, ListItemText, Container } from \"@material-ui/core/\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport class Confirm extends Component {\r\n  confirm = (e) => {\r\n    e.preventDefault();\r\n    // PROCESS FORM //\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\", {\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => console.log(json));\r\n    this.props.nextStep();\r\n  };\r\n\r\n  back = (e) => {\r\n    e.preventDefault();\r\n    this.props.prevStep();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      values: { name, username, email, phone, city, website },\r\n    } = this.props;\r\n    return (\r\n      <MuiThemeProvider>\r\n        <Dialog open fullWidth maxWidth='sm'>\r\n          <Container>\r\n            <AppBar title='Confirm User Data' />\r\n            <List>\r\n              <ListItem>\r\n                <ListItemText primary='Name' secondary={name} />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText primary='Username' secondary={username} />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText primary='Email' secondary={email} />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText primary='Phone Number' secondary={phone} />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText primary='City' secondary={city} />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText primary='Website' secondary={website} />\r\n              </ListItem>\r\n            </List>\r\n            <br />\r\n\r\n            <Button\r\n              color='secondary'\r\n              style={{ margin: 10 }}\r\n              variant='contained'\r\n              onClick={this.back}\r\n            >\r\n              Back\r\n            </Button>\r\n\r\n            <Button color='primary' variant='contained' onClick={this.confirm}>\r\n              Confirm\r\n            </Button>\r\n          </Container>\r\n        </Dialog>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Confirm;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nexport default class SimpleTable extends Component {\r\n  //Rendering Data In Browser\r\n  render() {\r\n    const {\r\n      values: { name, username, email, phone, city, website },\r\n    } = this.props;\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <h5 style={{ margin: 10 }}>User Added Successfully</h5>\r\n        <Table aria-label='simple table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell align='right'>Username</TableCell>\r\n              <TableCell align='right'>Email</TableCell>\r\n              <TableCell align='right'>City</TableCell>\r\n              <TableCell align='right'>Phone</TableCell>\r\n              <TableCell align='right'>Website</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell component='th' scope='row'>\r\n                {name}\r\n              </TableCell>\r\n              <TableCell align='right'>{username}</TableCell>\r\n              <TableCell align='right'>{email}</TableCell>\r\n              <TableCell align='right'>{city}</TableCell>\r\n              <TableCell align='right'>{phone}</TableCell>\r\n              <TableCell align='right'>{website}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n}\r\n","//Component To ADD DATA With Stepper Form\r\nimport React, { Component } from \"react\";\r\nimport PersonalInfoComponent from \"./PersonalInfoComponent\";\r\nimport CompanyInfoComponent from \"./CompanyInfoComponent\";\r\nimport ConfirmFormComponent from \"./ConfirmFormComponent\";\r\nimport SuccessComponent from \"./SuccessComponent\";\r\n\r\nexport default class AddFormComponent extends Component {\r\n  state = {\r\n    step: 1,\r\n    id: \"\",\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    city: \"\",\r\n    website: \"\",\r\n  };\r\n\r\n  // forward\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({\r\n      step: step + 1,\r\n    });\r\n  };\r\n\r\n  // backward\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({\r\n      step: step - 1,\r\n    });\r\n  };\r\n\r\n  // Handle Input\r\n  handleChange = (input) => (e) => {\r\n    this.setState({ [input]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      step,\r\n      id,\r\n      name,\r\n      username,\r\n      email,\r\n      phone,\r\n      city,\r\n      website,\r\n    } = this.state;\r\n    const values = { id, name, username, email, phone, city, website };\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <PersonalInfoComponent\r\n            nextStep={this.nextStep}\r\n            handleChange={this.handleChange}\r\n            values={values}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <CompanyInfoComponent\r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            handleChange={this.handleChange}\r\n            values={values}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <ConfirmFormComponent\r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            values={values}\r\n          />\r\n        );\r\n      case 4:\r\n        return <SuccessComponent values={values} />;\r\n      default:\r\n        console.log(\"This is a multi-step form built with React.\");\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Table from \"./TableComponent\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport AddFormComponent from \"./AddFormComponent\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role='tabpanel'\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"white\",\r\n  },\r\n}));\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static' color='primary'>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label='simple tabs example'\r\n          centered\r\n        >\r\n          <Tab label='READ' {...a11yProps(0)} />\r\n          <Tab label='CREATE' {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <Table />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <AddFormComponent />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Container } from \"@material-ui/core\";\nimport IndexComponent from \"./components/IndexComponent\";\n\nexport default function App() {\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <h1>USER MANAGEMENT</h1>\n        </Grid>\n        <Grid item xs={12}>\n          <IndexComponent />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}